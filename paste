#!/bin/sh
# SPDX-License-Identifier: 0BSD
set -Cu
exename=${0##*'/'}
exepath=$(command -v -- "${exename}" && printf 'n') && [ "${exepath%?}" = "${0}" ]
if [ "${?}" -eq 0 ]; then
    exepath=${exename}
else
    exepath=${0}
fi

cd "$(dirname -- "$(readlink -ne -- "${0}")")"
err () {
    printf '%s: %s\n' "${exepath}" "${1}" >&2
    exit 1
}

[ "${#}" -ge 1 -a "${#}" -le 2 ] || err "expected 1 or 2 arguments, found ${#}"
case "${1}" in
    *[!0-9]*) err "not a number: ${1}" ;;
esac

if [ "${#}" -eq 2 ]; then
    case "${2}" in
        *[!0-9]*) err "not a number: ${2}" ;;
    esac
    mkdir -p "${2}" || err "failed to create directory: ${2}"
else
    unset -v newest
    for dir in *; do
        case "${dir}" in
            *[!0-9]*) continue ;;
        esac
        { [ -z "${newest+n}" ] || [ "${dir}" -gt "${newest}" ]; } && newest=${dir}
    done
    [ -n "${newest}" ] || \
        err 'could not find any year folders'
    set -- "${1}" "${newest}"
fi

[ -e "${2}/${1}.zig" ] || cat <<EOF >"${2}/${1}.zig"
const std = @import("std");
const util = @import("util");
const input = @embedFile("${1}.txt");

pub fn main(n: util.Utils) !void {
}
EOF

[ -e "${2}/${1}.txt" ] || xclip -o -selection clipboard >"${2}/${1}.txt"

[ "${exename}" = 'edit' ] && {
    editor=${VISUAL-"${EDITOR-'vi'}"}
    "${editor}" "${2}/${1}.zig"
}
